// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebGSMT.Models;

namespace WebGSMT.Migrations
{
    [DbContext(typeof(GiamSatMoiTruongDbContext))]
    [Migration("20200923013130_newMigration")]
    partial class newMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("WebGSMT.Models.Account", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserName");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            UserName = "duckieuola",
                            Active = true,
                            DOB = new DateTime(1999, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "duckmhe130998@fpt.edu.vn",
                            FullName = "Kieu Minh Duc",
                            Password = "123456789",
                            PhoneNumber = "0377398442"
                        });
                });

            modelBuilder.Entity("WebGSMT.Models.Account_Role", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleName")
                        .HasColumnType("TEXT");

                    b.HasKey("UserName", "RoleName");

                    b.HasIndex("RoleName");

                    b.ToTable("Account_Role");

                    b.HasData(
                        new
                        {
                            UserName = "duckieuola",
                            RoleName = "Admin"
                        });
                });

            modelBuilder.Entity("WebGSMT.Models.Catalog_Data", b =>
                {
                    b.Property<string>("TagName")
                        .HasColumnType("TEXT");

                    b.Property<string>("DiemDo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TagName", "DiemDo");

                    b.ToTable("Catalog_Data");
                });

            modelBuilder.Entity("WebGSMT.Models.Data", b =>
                {
                    b.Property<string>("TagName")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeviceName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Connected")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DiemDo")
                        .HasColumnType("TEXT");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("TagName", "DeviceName", "Time");

                    b.HasIndex("DeviceName");

                    b.HasIndex("TagName", "DiemDo");

                    b.ToTable("Data");
                });

            modelBuilder.Entity("WebGSMT.Models.Device", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("BranchOrProtocol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NameShow")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("Device");
                });

            modelBuilder.Entity("WebGSMT.Models.Permission", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Parent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Permission");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Parent = "#",
                            Text = "Giam Sat"
                        },
                        new
                        {
                            ID = 2,
                            Parent = "1",
                            Text = "Thiet bi"
                        },
                        new
                        {
                            ID = 3,
                            Parent = "2",
                            Text = "Thiet bi-Them moi"
                        },
                        new
                        {
                            ID = 4,
                            Parent = "2",
                            Text = "Thiet bi-Xem"
                        },
                        new
                        {
                            ID = 5,
                            Parent = "2",
                            Text = "Thiet bi-Sua"
                        },
                        new
                        {
                            ID = 6,
                            Parent = "2",
                            Text = "Thiet bi-Xoa"
                        },
                        new
                        {
                            ID = 7,
                            Parent = "1",
                            Text = "Danh muc du lieu"
                        },
                        new
                        {
                            ID = 8,
                            Parent = "7",
                            Text = "Danh muc du lieu-Them moi"
                        },
                        new
                        {
                            ID = 9,
                            Parent = "7",
                            Text = "Danh muc du lieu-Sua"
                        },
                        new
                        {
                            ID = 10,
                            Parent = "7",
                            Text = "Danh muc du lieu-Xoa"
                        },
                        new
                        {
                            ID = 11,
                            Parent = "1",
                            Text = "Quan Tri Vien"
                        },
                        new
                        {
                            ID = 12,
                            Parent = "11",
                            Text = "Quan Tri Vien-Vai Tro"
                        },
                        new
                        {
                            ID = 13,
                            Parent = "12",
                            Text = "Quan Tri Vien-Vai Tro-Them moi"
                        },
                        new
                        {
                            ID = 14,
                            Parent = "12",
                            Text = "Quan Tri Vien-Vai Tro-Xem"
                        },
                        new
                        {
                            ID = 15,
                            Parent = "12",
                            Text = "Quan Tri Vien-Vai Tro-Sua"
                        },
                        new
                        {
                            ID = 16,
                            Parent = "12",
                            Text = "Quan Tri Vien-Vai Tro-Xoa"
                        },
                        new
                        {
                            ID = 17,
                            Parent = "11",
                            Text = "Quan Tri Vien-Nguoi Dung"
                        },
                        new
                        {
                            ID = 18,
                            Parent = "17",
                            Text = "Quan Tri Vien-Nguoi Dung-Them moi"
                        },
                        new
                        {
                            ID = 19,
                            Parent = "17",
                            Text = "Quan Tri Vien-Nguoi Dung-Xem"
                        },
                        new
                        {
                            ID = 20,
                            Parent = "17",
                            Text = "Quan Tri Vien-Nguoi Dung-Sua"
                        },
                        new
                        {
                            ID = 21,
                            Parent = "17",
                            Text = "Quan Tri Vien-Nguoi Dung-Xoa"
                        });
                });

            modelBuilder.Entity("WebGSMT.Models.Permission_Role", b =>
                {
                    b.Property<int>("PermissionID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoleName")
                        .HasColumnType("TEXT");

                    b.HasKey("PermissionID", "RoleName");

                    b.HasIndex("RoleName");

                    b.ToTable("Permission_Role");

                    b.HasData(
                        new
                        {
                            PermissionID = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            PermissionID = 2,
                            RoleName = "Admin"
                        },
                        new
                        {
                            PermissionID = 3,
                            RoleName = "Admin"
                        },
                        new
                        {
                            PermissionID = 4,
                            RoleName = "Admin"
                        },
                        new
                        {
                            PermissionID = 5,
                            RoleName = "Admin"
                        },
                        new
                        {
                            PermissionID = 6,
                            RoleName = "Admin"
                        },
                        new
                        {
                            PermissionID = 7,
                            RoleName = "Admin"
                        },
                        new
                        {
                            PermissionID = 8,
                            RoleName = "Admin"
                        },
                        new
                        {
                            PermissionID = 9,
                            RoleName = "Admin"
                        },
                        new
                        {
                            PermissionID = 10,
                            RoleName = "Admin"
                        },
                        new
                        {
                            PermissionID = 11,
                            RoleName = "Admin"
                        },
                        new
                        {
                            PermissionID = 12,
                            RoleName = "Admin"
                        },
                        new
                        {
                            PermissionID = 13,
                            RoleName = "Admin"
                        },
                        new
                        {
                            PermissionID = 14,
                            RoleName = "Admin"
                        },
                        new
                        {
                            PermissionID = 15,
                            RoleName = "Admin"
                        },
                        new
                        {
                            PermissionID = 16,
                            RoleName = "Admin"
                        },
                        new
                        {
                            PermissionID = 17,
                            RoleName = "Admin"
                        },
                        new
                        {
                            PermissionID = 18,
                            RoleName = "Admin"
                        },
                        new
                        {
                            PermissionID = 19,
                            RoleName = "Admin"
                        },
                        new
                        {
                            PermissionID = 20,
                            RoleName = "Admin"
                        },
                        new
                        {
                            PermissionID = 21,
                            RoleName = "Admin"
                        });
                });

            modelBuilder.Entity("WebGSMT.Models.Role", b =>
                {
                    b.Property<string>("RoleName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RoleName");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            RoleName = "Admin",
                            Description = "lam duoc moi thu"
                        });
                });

            modelBuilder.Entity("WebGSMT.Models.Account_Role", b =>
                {
                    b.HasOne("WebGSMT.Models.Role", "Role")
                        .WithMany("Account_Roles")
                        .HasForeignKey("RoleName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebGSMT.Models.Account", "Account")
                        .WithMany("Account_Roles")
                        .HasForeignKey("UserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebGSMT.Models.Data", b =>
                {
                    b.HasOne("WebGSMT.Models.Device", "Device")
                        .WithMany("Datas")
                        .HasForeignKey("DeviceName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebGSMT.Models.Catalog_Data", "Catalog_Data")
                        .WithMany("Datas")
                        .HasForeignKey("TagName", "DiemDo");
                });

            modelBuilder.Entity("WebGSMT.Models.Permission_Role", b =>
                {
                    b.HasOne("WebGSMT.Models.Permission", "Permission")
                        .WithMany("Permission_Roles")
                        .HasForeignKey("PermissionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebGSMT.Models.Role", "Role")
                        .WithMany("Permission_Roles")
                        .HasForeignKey("RoleName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
